@page "/ChangePassword"

@attribute [Authorize]
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<h3>Register</h3>


<EditForm Model="userRegisterDTO" OnValidSubmit="HandleRegistration">

   
    <p>New Password:</p>
    <InputText @bind-Value="userRegisterDTO.Password" id="password"></InputText>
    <p>Confirm Password:</p>
    <InputText @bind-Value="userRegisterDTO.ConfirmPassword" id="confirmPassword"></InputText>

    <button type="submit">CHange Password</button>
</EditForm>

<p>@message</p>


@code {
    UserRegisterDTO userRegisterDTO = new UserRegisterDTO();
    string message = string.Empty;

    async Task HandleRegistration()
    {
        if(userRegisterDTO.Password!= null && userRegisterDTO.Password == userRegisterDTO.ConfirmPassword)
        {


            var result = await AuthService.ChangePassword(userRegisterDTO.Password);
            if (result.Success)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                message = result.Message;
            }
        }
        else
        {
            message = "Podane hasła nie są takie same";
        }
    }

}
